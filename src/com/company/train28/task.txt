Your task is to find the first element of an array that is not consecutive.

By not consecutive we mean not exactly 1 larger than the previous element of the array.

E.g. If we have an array [1,2,3,4,6,7,8] then 1 then 2 then 3 then 4 are all consecutive but 6 is not,
so that's the first non-consecutive number.

If the whole array is consecutive then return null2.

The array will always have at least 2 elements1 and all elements will be numbers.
The numbers will also all be unique and in ascending order. The numbers could be positive or negative
and the first non-consecutive could be either too!

If you like this Kata, maybe try this one next: https://www.codewars.com/kata/represent-array-of-numbers-as-ranges

1 Can you write a solution that will return null2 for both [] and [ x ] though? (This is an empty array and one with
a single number and is not tested for, but you can write your own example test. )

2
Swift, Ruby and Crystal: nil
Haskell: Nothing
Python, Rust: None
Julia: nothing
Nim: none(int) (See options)

Ваша задача - найти первый не последовательный элемент массива.
Под непоследовательными мы подразумеваем не на 1 больше, чем предыдущий элемент массива.
Например. Если у нас есть массив [1,2,3,4,6,7,8], то 1, затем 2, затем 3, затем 4 - все последовательные,
а 6 - нет, так что это первое непоследовательное число. Если весь массив последовательный, верните null2.
В массиве всегда будет как минимум 2 элемента1, и все элементы будут числами.
Номера также будут уникальными и расположены в порядке возрастания.
Числа могут быть положительными или отрицательными, и первое непоследовательное тоже может быть!
Если вам нравится это Ката, возможно, попробуйте следующее:
https://www.codewars.com/kata/present-array-of-numbers-as-ranges 1 Можете ли вы написать решение,
 которое будет возвращать null2 как для [], так и для [x] хотя? (Это пустой массив с одним числом и не тестируется,
 но вы можете написать свой собственный пример теста.) 2 Swift, Ruby и Crystal: nil Haskell: Nothing Python,
 Rust: None Julia: ничего Nim: none (int) (см. параметры)